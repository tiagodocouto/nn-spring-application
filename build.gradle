plugins {
    id "org.springframework.boot" version "$springBootVersion"
    id "io.spring.dependency-management" version "$springDependencyManagementVersion"
    id "org.springframework.experimental.aot" version "$springAOTVersion"
    id "org.sonarqube" version "$sonarqubeVersion"
    id "idea"
    id "java"
    id "jacoco"
}

group = "nl.nn"
version = "$appVersion-SNAPSHOT"
sourceCompatibility = "$javaVersion"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url "https://repo.spring.io/release" }
    mavenCentral()
}

dependencies {
    // SPRING BOOT
    implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
    implementation "org.springframework.kafka:spring-kafka:$kafkaVersion"
    developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "org.springframework.kafka:spring-kafka-test:$kafkaVersion"

    // LOMBOK
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    // TESTCONTAINERS
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "org.testcontainers:kafka:$testcontainersVersion"
}

tasks.named("bootBuildImage") {
    builder = "paketobuildpacks/builder:tiny"
    environment = ["BP_NATIVE_IMAGE": "true"]
}

tasks.named("test") {
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}

tasks.jacocoTestReport {
    dependsOn("test")
    reports {
        xml.required.set(true)
        xml.outputLocation.set(layout.buildDirectory.file("$buildDir/reports/jacoco/test/jacocoTestReport.xml"))
    }
}

sonarqube {
    properties {
        property("sonar.host.url", "https://sonarcloud.io")
        property("sonar.organization", "tihlok")
        property("sonar.projectKey", "tihlok_nn-spring-application")
        property("sonar.exclusions", "src/main/java/nl/nn/app/NNSpringApp.java")
        property("sonar.java.coveragePlugin", "jacoco")
    }
}

jacoco {
    toolVersion = "$jacocoVersion"
}
